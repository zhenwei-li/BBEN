<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <properties resource="sqlServer-jdbc.properties"></properties>
    <classPathEntry location="${dbconfig.sqlServer.driverLocation}" />

    <context id="MysqlTables" targetRuntime="MyBatis3">
        <!-- 指定生成的java文件的编码,没有直接生成到项目时中文可能会乱码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!--生成的实体类实现序列化接口	【扩展插件】-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <!--生成的实体类重写toString方法-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

        <!--<commentGenerator>
            <!– 去除自动生成的注释 –>
            <property name="suppressAllComments" value="true" />
        </commentGenerator>-->
        <!-- 是否生成注释 去除自动生成的注释-->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 数据库连接配置 -->
        <jdbcConnection driverClass="${dbconfig.sqlServer.driverClasss}"
                        connectionURL="${dbconfig.sqlServer.ssmDemo.read.jdbcUrl}"
                        userId="${dbconfig.sqlServer.username}"
                        password="${dbconfig.sqlServer.password}" />

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.bben.bedcard.model.sqlBedcard"
                            targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="mapper.sqlBedcard" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
        targetPackage/targetProject:同javaModelGenerator
        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
        注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <!-- 生成DAO的包名和位置-->
        <!-- XMLMAPPER生成xml映射文件, ANNOTATEDMAPPER生成的dao采用注解来写sql -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.bben.bedcard.mapper.sqlBedcard"
                             targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成对应表及类名-->
        <!-- 配置表
            schema：不用填写
            tableName: 表名
            enableCountByExample、enableSelectByExample、enableDeleteByExample、enableUpdateByExample、selectByExampleQueryId：
            去除自动生成的例子
        -->
        <!--<table schema=""-->
               <!--tableName="Grade"-->
               <!--domainObjectName="Grade"-->
               <!--enableCountByExample="false"-->
               <!--enableSelectByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableUpdateByExample="false"-->
               <!--selectByExampleQueryId="false" >-->
        <!--</table>-->

        <table tableName="Grade">
            <!--&lt;!&ndash;&lt;!&ndash;mysql 配置 &ndash;&gt;&ndash;&gt;-->
            <!--<generatedKey column="id" sqlStatement="Mysql" identity="true"/>-->
        </table>
    </context>
</generatorConfiguration>